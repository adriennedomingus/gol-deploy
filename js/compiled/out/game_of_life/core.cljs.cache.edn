;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name game-of-life.core, :imports nil, :requires nil, :uses nil, :defs {neighbors {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 10, :column 7, :end-line 10, :end-column 16, :arglists (quote ([[x y]]))}, :name game-of-life.core/neighbors, :variadic false, :file "src/game_of_life/core.cljs", :end-column 16, :method-params ([p__33713]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y]]))}, draw {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 54, :column 7, :end-line 54, :end-column 11, :arglists (quote ([board]))}, :name game-of-life.core/draw, :variadic false, :file "src/game_of_life/core.cljs", :end-column 11, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, ctx {:name game-of-life.core/ctx, :file "src/game_of_life/core.cljs", :line 41, :column 1, :end-line 41, :end-column 9, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 41, :column 6, :end-line 41, :end-column 9}}, alive? {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 16, :column 7, :end-line 16, :end-column 13, :arglists (quote ([board [x y]]))}, :name game-of-life.core/alive?, :variadic false, :file "src/game_of_life/core.cljs", :end-column 13, :method-params ([board p__33732]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board [x y]]))}, canvas-dom {:name game-of-life.core/canvas-dom, :file "src/game_of_life/core.cljs", :line 39, :column 1, :end-line 39, :end-column 16, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 39, :column 6, :end-line 39, :end-column 16}}, board {:name game-of-life.core/board, :file "src/game_of_life/core.cljs", :line 52, :column 1, :end-line 52, :end-column 11, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 52, :column 6, :end-line 52, :end-column 11}}, next-board {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 32, :column 7, :end-line 32, :end-column 17, :arglists (quote ([board]))}, :name game-of-life.core/next-board, :variadic false, :file "src/game_of_life/core.cljs", :end-column 17, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, count-living-neighbors {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 19, :column 7, :end-line 19, :end-column 29, :arglists (quote ([board coord]))}, :name game-of-life.core/count-living-neighbors, :variadic false, :file "src/game_of_life/core.cljs", :end-column 29, :method-params ([board coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board coord]))}, next-state {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 23, :column 7, :end-line 23, :end-column 17, :arglists (quote ([board coord]))}, :name game-of-life.core/next-state, :variadic false, :file "src/game_of_life/core.cljs", :end-column 17, :method-params ([board coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board coord]))}, make-board {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 6, :column 7, :end-line 6, :end-column 17, :arglists (quote ([height width]))}, :name game-of-life.core/make-board, :variadic false, :file "src/game_of_life/core.cljs", :end-column 17, :method-params ([height width]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([height width]))}, draw-rect {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 46, :column 9, :end-line 46, :end-column 18, :arglists (quote ([ctx x y w h]))}, :name game-of-life.core/draw-rect, :variadic false, :file "src/game_of_life/core.cljs", :end-column 18, :method-params ([ctx x y w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 46, :end-line 46, :max-fixed-arity 5, :fn-var true, :arglists (quote ([ctx x y w h]))}, draw-loop {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 65, :column 7, :end-line 65, :end-column 16, :arglists (quote ([]))}, :name game-of-life.core/draw-loop, :variadic false, :file "src/game_of_life/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, clear-canvas {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/core.cljs", :line 49, :column 9, :end-line 49, :end-column 21, :arglists (quote ([ctx]))}, :name game-of-life.core/clear-canvas, :variadic false, :file "src/game_of_life/core.cljs", :end-column 21, :method-params ([ctx]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ctx]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}