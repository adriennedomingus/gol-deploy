;; Analyzed by ClojureScript 1.8.51
{:name game-of-life.render, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {g game-of-life.core, game-of-life.core game-of-life.core}, :imports nil, :defs {canvas-dom {:name game-of-life.render/canvas-dom, :file "src/game_of_life/render.cljs", :line 4, :column 1, :end-line 4, :end-column 16, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/render.cljs", :line 4, :column 6, :end-line 4, :end-column 16}}, ctx {:name game-of-life.render/ctx, :file "src/game_of_life/render.cljs", :line 6, :column 1, :end-line 6, :end-column 9, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/render.cljs", :line 6, :column 6, :end-line 6, :end-column 9}}, draw-rect {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/render.cljs", :line 11, :column 9, :end-line 11, :end-column 18, :arglists (quote ([ctx x y w h]))}, :name game-of-life.render/draw-rect, :variadic false, :file "src/game_of_life/render.cljs", :end-column 18, :method-params ([ctx x y w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 11, :end-line 11, :max-fixed-arity 5, :fn-var true, :arglists (quote ([ctx x y w h]))}, clear-canvas {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/render.cljs", :line 14, :column 9, :end-line 14, :end-column 21, :arglists (quote ([ctx]))}, :name game-of-life.render/clear-canvas, :variadic false, :file "src/game_of_life/render.cljs", :end-column 21, :method-params ([ctx]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ctx]))}, board {:name game-of-life.render/board, :file "src/game_of_life/render.cljs", :line 17, :column 1, :end-line 17, :end-column 11, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/render.cljs", :line 17, :column 6, :end-line 17, :end-column 11}}, draw {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/render.cljs", :line 19, :column 7, :end-line 19, :end-column 11, :arglists (quote ([board]))}, :name game-of-life.render/draw, :variadic false, :file "src/game_of_life/render.cljs", :end-column 11, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, draw-loop {:protocol-inline nil, :meta {:file "/Users/adrienne/personal_projects/game-of-life/src/game_of_life/render.cljs", :line 30, :column 7, :end-line 30, :end-column 16, :arglists (quote ([]))}, :name game-of-life.render/draw-loop, :variadic false, :file "src/game_of_life/render.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}}